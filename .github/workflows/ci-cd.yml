name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Quality checks and testing
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 📋 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Run ESLint
        run: npm run lint 2>/dev/null || echo "⚠️ ESLint issues found but continuing..."
        continue-on-error: true
        
      - name: 🏗️ Type check
        run: npm run type-check
        continue-on-error: true
        
      - name: 🧪 Run tests (if available)
        run: npm run test --if-present
        continue-on-error: false
        
      - name: 🔨 Build check
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

  # Security scanning
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 📋 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Run security audit
        run: npm audit --audit-level moderate
        continue-on-error: true
        
      - name: 🔒 Check for vulnerabilities
        run: |
          if npm audit --audit-level high --dry-run; then
            echo "✅ No high-severity vulnerabilities found"
          else
            echo "❌ High-severity vulnerabilities found"
            npm audit --audit-level high
            exit 1
          fi

  # Preview deployment for PRs
  preview-deploy:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 📋 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build Project
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          
      - name: 🚀 Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}

  # Production deployment
  production-deploy:
    name: 🌟 Deploy Production
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 📋 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build Project
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          
      - name: 🌟 Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        id: deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}
          
      - name: 🎉 Create deployment success notification
        run: |
          echo "✅ Production deployment successful!"
          echo "🚀 Live URL: ${{ steps.deploy.outputs.preview-url }}"

  # Performance monitoring (disabled temporarily)
  # lighthouse:
  #   name: 🔍 Lighthouse Performance Check
  #   runs-on: ubuntu-latest
  #   needs: production-deploy
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   
  #   steps:
  #     - name: 📦 Checkout code
  #       uses: actions/checkout@v4
  #       
  #     - name: 🔍 Run Lighthouse CI
  #       uses: treosh/lighthouse-ci-action@v10
  #       with:
  #         urls: |
  #           https://algo-viz-major-1.vercel.app
  #         configPath: './.lighthouserc.json'
  #         uploadArtifacts: true
  #         temporaryPublicStorage: true
